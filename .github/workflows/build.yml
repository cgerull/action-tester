name: Java CI

on: [push]

jobs:
  build-container:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    env:
      IMAGE_NAME: myAction
      IMAGE_TAG: none

    steps:
      - uses: actions/checkout@v4.2.2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3.2.0
        # with:
        #   platforms: 'arm64,amd64'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.7.1

      # - name: Build image
      #   run: docker build . --file Dockerfile --tag $IMAGE_NAME --label "run-id=${GITHUB_RUN_ID}"

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3.3.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}


      - name: Get image name and tag
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME
          echo "IMAGE_ID raw = $IMAGE_ID"
          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          echo "github.ref.type = $GITHUB_REF_TYPE"
          if [[ "$GITHUB_REF_TYPE" = "branch" ]]; then
            VERSION=latest
          else
            echo "GITHUB_REF = $GITHUB_REF"
            # Strip git ref prefix from version
            VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
            echo "Stripped GITHUB_REF = $VERSION"
            # Strip "v" prefix from tag name
            [[ "${{ github.ref }}" = "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          fi

          echo "IMAGE_ID final = IMAGE_ID"
          echo "VERSION = $VERSION"

          echo "IMAGE_NAME=$IMAGE_ID" >> $GITHUB_ENV
          echo "IMAGE_TAG=$VERSION" >> $GITHUB_ENV
          echo " ******************************************* "
          env | sort

      - name: Print variables
        run: |
          echo "Image name  = $IMAGE_NAME"
          echo "Image tag = $IMAGE_TAG"
          echo "And now with env. notation"
          echo "Image name  = ${{ env.IMAGE_NAME }}"
          echo "Image tag = ${{ env.IMAGE_TAG }}"

      - name: Build and push
        uses: docker/build-push-action@v6.9.0
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: "${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}"
          # tags: user/app:latest
